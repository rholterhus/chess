{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["getIcon","type","color","eightByEight","i","j","push","reachableContains","arr","val","length","arraysEqual","isInPossibleMoves","move","allPossible","ChessTile","x","y","this","props","selected","reachable","style","float","height","width","backgroundColor","display","alignItems","justifyContent","opacity","boxShadow","onMouseOver","e","currentTarget","onMouseDown","makeMove","onMouseOut","piece","src","process","cursor","React","Component","initialPositionMap","0","1","2","3","4","5","6","7","arr1","arr2","getBoardRepresentation","board","s","num","Math","floor","App","whiteCanCastleQueenSideCheck","state","emptySquare","condition","whiteCanCastleQueenSide","whiteCanCastleKingSideCheck","whiteCanCastleKingSide","blackCanCastleQueenSideCheck","blackCanCastleQueenSide","blackCanCastleKingSideCheck","blackCanCastleKingSide","getReachablePieces","checkLegality","validLocation","sideToPlay","inBounds","ans","selectedPiece","k","legalAnswer","allPossibleMoves","alterBoard","initialLoc","endingLoc","newBoard","currentPiece","currentSide","castle","isLegalMove","newState","JSON","parse","stringify","possibleResponseMoves","getAllPossibleMoves","newPositionSquare","answer","res","whiteQueenSideCastleMove","whiteKingSideCastleMove","currentX","currentY","whiteQueenCastle","whiteKingCastle","blackQueenCastle","blackKingCastle","setState","axios","post","then","fromX","parseInt","data","fromY","toX","toY","alert","reachablePieces","className","map","pair","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9a655ad.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nvar getColor = (x,y) => (x % 2) ? ((y % 2) ? 'gray' : 'lightgray') : ((y % 2) ? 'lightgray' : 'gray')\n\nvar getIcon = function(type, color) {\n  return type + color + '.png';\n}\n\nvar eightByEight = []\nfor(var i = 0; i < 8; i++) {\n  for(var j = 0; j < 8; j++) {\n    eightByEight.push([i,j]);\n  }\n}\n\nvar reachableContains = function(arr, val) {\n  for(var i = 0; i < arr.length; ++i) {\n    if(arraysEqual(arr[i], val)) return true\n  }\n  return false\n}\n\n\nvar isInPossibleMoves = function(move, allPossible) {\n  for(var i = 0; i < allPossible.length; ++i) {\n    if(arraysEqual(move[0], allPossible[i][0]) && arraysEqual(move[1], allPossible[i][1])) return true\n  }\n  return false\n}\n\n\nclass ChessTile extends React.Component {\n\n  render() {\n\n    var color = getColor(this.props.x, this.props.y);\n    var selected = arraysEqual([this.props.x, this.props.y], this.props.selected)\n    var reachable = this.props.reachable\n\n    return <div\n            style={{\n              float: \"left\",\n              height: \"12.5%\",\n              width: \"12.5% \",\n              backgroundColor: color,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              opacity: selected || reachable ? 0.75 : 1,\n              boxShadow: \"black\",\n              }}\n              onMouseOver={(e) => e.currentTarget.style.opacity = 0.75}\n              onMouseDown={(e) => this.props.makeMove(this.props.x, this.props.y)}\n              onMouseOut={(e) => selected || reachable ? null : e.currentTarget.style.opacity = 1}\n            >\n              {this.props.piece[0] ? <img\n                src={process.env.PUBLIC_URL + getIcon(this.props.piece[0], this.props.piece[1])} style={{\n                width: \"75%\",\n                height: \"75%\",\n                cursor: \"pointer\"\n                }}></img> : null}\n            </div>;\n  }\n}\n\n\nvar initialPositionMap = {\n  0: \"rook\",\n  1: \"knight\",\n  2: \"bishop\",\n  3: \"queen\",\n  4: \"king\",\n  5: \"bishop\",\n  6: \"knight\",\n  7: \"rook\",\n}\n\nvar arraysEqual = function(arr1, arr2) {\n  if(arr1.length != arr2.length) return false;\n  for(var i = 0; i < arr1.length; ++i) if(arr1[i] != arr2[i]) return false;\n  return true;\n}\n\nvar getBoardRepresentation = function(board) {\n  var s = '';\n  for(var num = 63; num >= 0; num--) {\n    var i = Math.floor(num/8);\n    var j = (7 - (num % 8)) % 8;\n    if(arraysEqual(board[[i,j]],[\"pawn\", \"white\"])) s += 'P'\n    else if(arraysEqual(board[[i,j]],[\"knight\", \"white\"])) s += 'H'\n    else if(arraysEqual(board[[i,j]],[\"bishop\", \"white\"])) s += 'B'\n    else if(arraysEqual(board[[i,j]],[\"rook\", \"white\"])) s += 'R'\n    else if(arraysEqual(board[[i,j]],[\"queen\", \"white\"])) s += 'Q'\n    else if(arraysEqual(board[[i,j]],[\"king\", \"white\"])) s += 'K'\n\n    else if(arraysEqual(board[[i,j]],[\"pawn\", \"black\"])) s += 'O'\n    else if(arraysEqual(board[[i,j]],[\"knight\", \"black\"])) s += 'L'\n    else if(arraysEqual(board[[i,j]],[\"bishop\", \"black\"])) s += 'D'\n    else if(arraysEqual(board[[i,j]],[\"rook\", \"black\"])) s += 'C'\n    else if(arraysEqual(board[[i,j]],[\"queen\", \"black\"])) s += 'W'\n    else if(arraysEqual(board[[i,j]],[\"king\", \"black\"])) s += 'I'\n    else s += '_';\n  }\n  return s;\n}\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    var board = {}\n    for(var i = 0; i < 8; i++) {\n      board[[0,i]] = [initialPositionMap[i], \"black\"];\n      board[[1,i]] = [\"pawn\", \"black\"];\n      board[[2,i]] = [null, null];\n      board[[3,i]] = [null, null];\n      board[[4,i]] = [null, null];\n      board[[5,i]] = [null, null];\n      board[[6,i]] = [\"pawn\", \"white\"];\n      board[[7,i]] = [initialPositionMap[i], \"white\"];\n    }\n    this.state = {\n      selected: [null, null],\n      board: board,\n      sideToPlay: \"white\",\n      selectedPiece: null,\n      blackCanCastleQueenSide: true,\n      blackCanCastleKingSide: true,\n      whiteCanCastleQueenSide: true,\n      whiteCanCastleKingSide: true\n    }\n    var allPossibleMoves = this.getAllPossibleMoves(this.state, true)\n    this.state.allPossibleMoves = allPossibleMoves\n\n\n  }\n\n\n  whiteCanCastleQueenSideCheck = (state) => {\n    var emptySquare = (i,j) => !state.board[[i,j]][0]\n    var condition = state.whiteCanCastleQueenSide\n    condition = condition && emptySquare(7, 1)\n    condition = condition && emptySquare(7, 2)\n    condition = condition && emptySquare(7, 3)\n    return condition\n  }\n\n  whiteCanCastleKingSideCheck = (state) => {\n    var emptySquare = (i,j) => !state.board[[i,j]][0]\n    var condition = state.whiteCanCastleKingSide\n    condition = condition && emptySquare(7, 6)\n    condition = condition && emptySquare(7, 5)\n    return condition\n  }\n\n  blackCanCastleQueenSideCheck = (state) => {\n    var emptySquare = (i,j) => !state.board[[i,j]][0]\n    var condition = state.blackCanCastleQueenSide\n    condition = condition && emptySquare(0, 1)\n    condition = condition && emptySquare(0, 2)\n    condition = condition && emptySquare(0, 3)\n    return condition\n  }\n\n  blackCanCastleKingSideCheck = (state) => {\n    var emptySquare = (i,j) => !state.board[[i,j]][0]\n    var condition = state.blackCanCastleKingSide\n    condition = condition && emptySquare(0, 6)\n    condition = condition && emptySquare(0, 5)\n    return condition\n  }\n\n  getReachablePieces = (state, checkLegality) => {\n    var validLocation = (i,j) => (((0 <= i) && (i <= 7) && (0 <= j) && (j <= 7)) && state.board[[i,j]][1] != state.sideToPlay)\n    var inBounds = (i,j) => ((0 <= i) && (i <= 7) && (0 <= j) && (j <= 7))\n\n    var ans = []\n    var x = state.selected[0]\n    var y = state.selected[1]\n\n    if(state.selectedPiece == \"knight\") {\n\n      if(validLocation(x+2,y-1)) ans.push([x+2,y-1])\n      if(validLocation(x+2,y+1)) ans.push([x+2,y+1])\n      if(validLocation(x-2,y+1)) ans.push([x-2,y+1])\n      if(validLocation(x-2,y-1)) ans.push([x-2,y-1])\n\n      if(validLocation(x+1,y+2)) ans.push([x+1,y+2])\n      if(validLocation(x+1,y-2)) ans.push([x+1,y-2])\n      if(validLocation(x-1,y+2)) ans.push([x-1,y+2])\n      if(validLocation(x-1,y-2)) ans.push([x-1,y-2])\n\n\n    } if(state.selectedPiece == \"bishop\" || state.selectedPiece == \"queen\") {\n\n      var k = 1\n      while(validLocation(x+k, y+k)) {\n        ans.push([x+k,y+k])\n        if(state.board[[x+k,y+k]][1] && state.board[[x+k,y+k]][1] != state.sideToPlay) break\n        k += 1\n      }\n      k = 1\n      while(validLocation(x-k, y+k)) {\n        ans.push([x-k,y+k])\n        if(state.board[[x-k,y+k]][1] && state.board[[x-k,y+k]][1] != state.sideToPlay) break\n        k += 1\n      }\n      k = 1\n      while(validLocation(x+k, y-k)) {\n        ans.push([x+k,y-k])\n        if(state.board[[x+k,y-k]][1] && state.board[[x+k,y-k]][1] != state.sideToPlay) break\n        k += 1\n      }\n      k = 1\n      while(validLocation(x-k, y-k)) {\n        ans.push([x-k,y-k])\n        if(state.board[[x-k,y-k]][1] && state.board[[x-k,y-k]][1] != state.sideToPlay) break\n        k += 1\n      }\n\n    } if(state.selectedPiece == \"rook\" || state.selectedPiece == \"queen\") {\n      var k = 1\n      while(validLocation(x+k, y)) {\n        ans.push([x+k,y])\n        if(state.board[[x+k,y]][1] && state.board[[x+k,y]][1] != state.sideToPlay) break\n        k += 1\n      }\n      k = 1\n      while(validLocation(x-k, y)) {\n        ans.push([x-k,y])\n        if(state.board[[x-k,y]][1] && state.board[[x-k,y]][1] != state.sideToPlay) break\n        k += 1\n      }\n      k = 1\n      while(validLocation(x, y-k)) {\n        ans.push([x,y-k])\n        if(state.board[[x,y-k]][1] && state.board[[x,y-k]][1] != state.sideToPlay) break\n        k += 1\n      }\n      k = 1\n      while(validLocation(x, y+k)) {\n        ans.push([x,y+k])\n        if(state.board[[x,y+k]][1] && state.board[[x,y+k]][1] != state.sideToPlay) break\n        k += 1\n      }\n\n    } if(state.selectedPiece == \"pawn\") {\n      if(state.sideToPlay == \"white\") {\n        if(validLocation(x-1,y) && !(state.board[[x-1,y]][1] && state.board[[x-1,y]][1] != state.sideToPlay)) ans.push([x-1,y])\n        if(inBounds(x-2, y) && state.selected[0] == 6 && !(state.board[[x-2,y]][1] && state.board[[x-2,y]][1] != state.sideToPlay)) if(validLocation(x-2,y)) ans.push([x-2,y])\n        if(inBounds(x-1, y+1) && state.board[[x-1,y+1]][1] && state.board[[x-1,y+1]][1] != state.sideToPlay) ans.push([x-1,y+1])\n        if(inBounds(x-1, y-1) && state.board[[x-1,y-1]][1] && state.board[[x-1,y-1]][1] != state.sideToPlay) ans.push([x-1,y-1])\n      } else {\n        if(validLocation(x+1,y) && !(state.board[[x+1,y]][1] && state.board[[x+1,y]][1] != state.sideToPlay)) ans.push([x+1,y])\n        if(inBounds(x+2, y) &&  x == 1 && !(state.board[[x+2,y]][1] && state.board[[x+2,y]][1] != state.sideToPlay)) if(validLocation(x+2,y)) ans.push([x+2,y])\n        if(inBounds(x+1, y+1) && state.board[[x+1,y+1]][1] && state.board[[x+1,y+1]][1] != state.sideToPlay) ans.push([x+1,y+1])\n        if(inBounds(x+1, y-1) && state.board[[x+1,y-1]][1] && state.board[[x+1,y-1]][1] != state.sideToPlay) ans.push([x+1,y-1])\n      }\n    } if(state.selectedPiece == \"king\") {\n      if(validLocation(x+1,y)) ans.push([x+1,y])\n      if(validLocation(x-1,y)) ans.push([x-1,y])\n      if(validLocation(x,y+1)) ans.push([x,y+1])\n      if(validLocation(x,y-1)) ans.push([x,y-1])\n\n      if(validLocation(x+1,y+1)) ans.push([x+1,y+1])\n      if(validLocation(x-1,y+1)) ans.push([x-1,y+1])\n      if(validLocation(x+1,y-1)) ans.push([x+1,y-1])\n      if(validLocation(x-1,y-1)) ans.push([x-1,y-1])\n\n      // Check for castles\n\n      if(state.sideToPlay == \"white\") {\n        if(this.whiteCanCastleQueenSideCheck(state)) ans.push([7,0])\n        if(this.whiteCanCastleKingSideCheck(state)) ans.push([7,7])\n      } else {\n        if(this.blackCanCastleQueenSideCheck(state)) ans.push([0,0])\n        if(this.blackCanCastleKingSideCheck(state)) ans.push([0,7])\n      }\n\n\n\n\n    }\n\n    if(checkLegality) { // We don't have to check legality for moves that lead to checkmate, that is why we don't have to recurse\n      var legalAnswer = []\n      for(var i = 0; i < ans.length; ++i) { // filter out moves that are illegal\n        if(isInPossibleMoves([state.selected, ans[i]], state.allPossibleMoves)) legalAnswer.push(ans[i])\n      }\n      return legalAnswer\n    }\n\n    return ans\n\n  }\n\n  alterBoard = (board, initialLoc, endingLoc) => {\n    var newBoard = board\n    var currentPiece = newBoard[initialLoc][0]\n    var currentSide = newBoard[initialLoc][1]\n    var castle = board[initialLoc][0] == \"king\" && board[endingLoc][0] == \"rook\" && board[endingLoc][1] == board[initialLoc][1]\n    if(castle && arraysEqual(endingLoc,[7,0])) {\n      newBoard[[7,4]] = [null, null]\n      newBoard[[7,0]] = [null, null]\n      newBoard[[7,3]] = [\"rook\", \"white\"]\n      newBoard[[7,2]] = [\"king\", \"white\"]\n    } else if(castle && arraysEqual(endingLoc,[7,7])) {\n      newBoard[[7,4]] = [null, null]\n      newBoard[[7,7]] = [null, null]\n      newBoard[[7,5]] = [\"rook\", \"white\"]\n      newBoard[[7,6]] = [\"king\", \"white\"]\n    } else {\n      newBoard[initialLoc] = [null, null]\n      newBoard[endingLoc] = [currentPiece, currentSide]\n    }\n    return newBoard\n  }\n\n  isLegalMove = (state, initialLoc, endingLoc) => {\n    var newState = JSON.parse(JSON.stringify(state));\n    newState.board = this.alterBoard(newState.board, initialLoc, endingLoc)\n    newState.sideToPlay = newState.sideToPlay == \"white\" ? \"black\" : \"white\"\n    var possibleResponseMoves = this.getAllPossibleMoves(newState, false)\n    for(var i = 0; i < possibleResponseMoves.length; ++i) {\n      var newPositionSquare = newState.board[possibleResponseMoves[i][1]]\n      if(newPositionSquare[0] == \"king\" && newPositionSquare[1] == state.sideToPlay) return false\n    }\n    return true\n  }\n\n\n  getAllPossibleMoves = (state, checkLegality) => {\n    var answer = []\n    for(var i = 0; i <= 7; ++i) {\n      for(var j = 0; j <= 7; ++j) {\n        if(state.board[[i,j]][1] == state.sideToPlay) {\n          var newState = JSON.parse(JSON.stringify(state))\n          newState.selected = [i,j]\n          newState.selectedPiece = state.board[[i,j]][0]\n          var res = this.getReachablePieces(newState, false)\n          for(var k = 0; k < res.length; ++k) {\n            if(checkLegality) {\n              if(this.isLegalMove(state, [i,j], res[k])) answer.push([[i,j], res[k]])\n            } else {\n              answer.push([[i,j], res[k]])\n            }\n          }\n        }\n      }\n    }\n    return answer\n  }\n\n\n\n  makeMove = (x,y) => {\n    var whiteQueenSideCastleMove = this.state.selectedPiece == \"king\" && arraysEqual([x,y], [7,0]) && this.whiteCanCastleQueenSideCheck(this.state)\n    var whiteKingSideCastleMove = this.state.selectedPiece == \"king\" && arraysEqual([x,y], [7,7]) && this.whiteCanCastleKingSideCheck(this.state)\n    var castlingMove = whiteQueenSideCastleMove || whiteKingSideCastleMove\n    if(!castlingMove && this.state.board[[x,y]][1] === this.state.sideToPlay) {\n      if(arraysEqual(this.state.selected, [x,y])) this.setState({selected: [null,null], selectedPiece: null}); // unclick selected\n      else this.setState({selected: [x,y], selectedPiece: this.state.board[[x,y]][0]});\n    }\n    else if (this.state.selected[0] != null) { // we are making a move\n      // check if valid move\n      var currentX = this.state.selected[0];\n      var currentY = this.state.selected[1];\n      if(reachableContains(this.getReachablePieces(this.state, true), [x, y])) {\n        var newBoard = this.alterBoard(this.state.board, this.state.selected, [x,y]);\n\n        // figure out new rules for castling\n        var whiteQueenCastle = this.state.whiteCanCastleQueenSide\n        var whiteKingCastle = this.state.whiteCanCastleKingSide\n        var blackQueenCastle = this.state.blackCanCastleQueenSide\n        var blackKingCastle = this.state.whiteCanCastleKingSide\n\n        if(this.state.sideToPlay == \"white\" && this.state.selectedPiece == \"king\") {\n          whiteQueenCastle = false\n          whiteKingCastle = false\n        }\n\n        if(this.state.sideToPlay == \"black\" && this.state.selectedPiece == \"king\") {\n          blackQueenCastle = false\n          blackKingCastle = false\n        }\n\n        if(this.state.selectedPiece == \"rook\" && arraysEqual([currentX,currentY],[7,0])) {\n          whiteQueenCastle = false\n        }\n\n        if(this.state.selectedPiece == \"rook\" && arraysEqual([currentX,currentY],[7,7])) {\n          whiteKingCastle = false\n        }\n\n        if(this.state.selectedPiece == \"rook\" && arraysEqual([currentX,currentY],[0,0])) {\n          blackQueenCastle = false\n        }\n\n        if(this.state.selectedPiece == \"rook\" && arraysEqual([currentX,currentY],[0,7])) {\n          blackKingCastle = false\n        }\n\n        if(this.state.sideToPlay == \"white\") {\n          this.setState({\n            board: newBoard,\n            sideToPlay: this.state.sideToPlay == \"white\" ? \"black\" : \"white\",\n            selected: [null, null],\n            selectedPiece: null,\n            whiteCanCastleQueenSide: whiteQueenCastle,\n            whiteCanCastleKingSide: whiteKingCastle,\n            blackCanCastleQueenSide: blackQueenCastle,\n            blackCanCastleKingSide: blackKingCastle,\n          }, () => {\n            this.setState({\n              allPossibleMoves: this.getAllPossibleMoves(this.state, true) \n            }, () => axios.post(`https://polar-badlands-38570.herokuapp.com/getMove`, { 'board': getBoardRepresentation(this.state.board)})\n            //}, () => axios.post(`http://localhost:8000/getMove`, { 'board': getBoardRepresentation(this.state.board)})\n            .then(res => {\n              var fromX = parseInt(res.data['nextMove'][0]);\n              var fromY = parseInt(res.data['nextMove'][2]);\n              var piece = this.state.board[[7-fromX, fromY]][0];\n              var toX = parseInt(res.data['nextMove'][4]);\n              var toY = parseInt(res.data['nextMove'][6]);\n              this.setState({selected: [7-fromX,fromY], selectedPiece: piece}, () => {\n                this.makeMove(7-toX,toY);\n              })}))})\n        } else {\n          this.setState({\n            board: newBoard,\n            sideToPlay: this.state.sideToPlay == \"white\" ? \"black\" : \"white\",\n            selected: [null, null],\n            selectedPiece: null,\n            whiteCanCastleQueenSide: whiteQueenCastle,\n            whiteCanCastleKingSide: whiteKingCastle,\n            blackCanCastleQueenSide: blackQueenCastle,\n            blackCanCastleKingSide: blackKingCastle,\n          }, () => {\n            this.setState({\n            allPossibleMoves: this.getAllPossibleMoves(this.state, true)\n          }, () => {if(arraysEqual([], this.state.allPossibleMoves)) alert(\"CHECKMATE\")})});\n        }\n      }\n    }\n    else this.setState({selected: [null, null], selectedPiece: null}); // else just reset\n  }\n\n  render() {\n\n    var reachablePieces = this.getReachablePieces(this.state, true)\n    \n    return (\n      <div className=\"App\">\n        <div className=\"Container\">\n          {eightByEight.map(pair => <ChessTile\n                                      x={pair[0]}\n                                      y={pair[1]}\n                                      piece={this.state.board[pair]}\n                                      sideToPlay={this.state.sideToPlay}\n                                      makeMove={this.makeMove}\n                                      selected={this.state.selected}\n                                      selectedPiece={this.state.selectedPiece}\n                                      reachable={reachableContains(reachablePieces, [pair[0], pair[1]])}\n                                      />)}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}